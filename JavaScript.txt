Array Methods:
var fruits = ["Banana", "Orange", "Apple", "Mango"];

join() : method also joins all array elements into a string
= fruits.join(" * "); => Banana * Orange * Apple * Mango

pop() : Removes element from end of the array and return it
= fruits.pop()=> returns "Mango", After that array will be ["Banana", "Orange", "Apple"]
= pop() with empty array return "undefined"

push() : Add element to the end of the array and return the size of the array
= fruits.push("Kiwi") => returns the size '5', after that array will be ["Banana", "Orange", "Apple", "Mango","Kiwi"]

shift() : This method removes the element from start of the array and return the element
= fruits.shift() => returns "Banana", after that array will be ["Orange", "Apple", "Mango"]
= shift() with empty array return "undefined"

unshift() : This method adds the element in to array at the start and return the size of the array
= fruits.unshift("Lemon")=> returns '5', after that array size will be ["Lemon,""Banana", "Orange", "Apple", "Mango"]

delete : delete the element and return boolean value
= delete fruits[0] will return true

splice() : This one we use to add/remove elements from the array and return the removed elements(Affect the original array)
= fruits.splice(2, 0, "Lemon", "Kiwi");=> new array after splice ["Banana", "Orange", "Lemon", "Kiwi", "Apple", "Mango"];
 	1st parameter indicates the position in the array
 	2nd parameter indicates how many elements should remove before add
= fruits.splice(1); => Removes all elements after 1st position=> Result new array ["Banana"]; 
= fruits.splice(1,2); => Removes all between 1st position and 2nd position=> Result new array ["Banana", "Mango"];

slice() : method slices out a piece of an array into a new array and return the resulting array(Won't affect the original array)
= var newArray=fruits.slice(1)=>  Slice 1st element and return the resulting array, result ["Orange", "Apple", "Mango"], Opposite to splice()
= var newArray=fruits.slice(-1)=> Slice last element and return the resulting array, result []
 

concat() : used to merge the arrays
= example: array.concat(array1)=> merger 2 arrays, array.concat(array1,array2)=> merge 3 arrays








